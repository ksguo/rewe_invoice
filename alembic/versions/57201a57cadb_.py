"""empty message

Revision ID: 57201a57cadb
Revises: 
Create Date: 2024-07-10 12:38:20.122926

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '57201a57cadb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attributes',
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.Column('attribute_name', sa.String(), nullable=True),
    sa.Column('attribute_description', sa.String(), nullable=True),
    sa.Column('attribute_created', sa.DateTime(), nullable=True),
    sa.Column('attribute_modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('attribute_id')
    )
    op.create_table('payment_methods',
    sa.Column('paymentmethod_id', sa.Integer(), nullable=False),
    sa.Column('paymentmethod_name', sa.String(), nullable=True),
    sa.Column('paymentmetod_subtype', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['paymentmetod_subtype'], ['payment_methods.paymentmethod_id'], ),
    sa.PrimaryKeyConstraint('paymentmethod_id')
    )
    op.create_table('supermarket_chains',
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('chain_name', sa.String(), nullable=True),
    sa.Column('chain_shortname', sa.String(), nullable=True),
    sa.Column('chain_api_type', sa.Integer(), nullable=True),
    sa.Column('chain_api_endpoint', sa.Text(), nullable=True),
    sa.Column('chain_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('chain_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.Column('user_email', sa.String(), nullable=True),
    sa.Column('user_password', sa.String(length=255), nullable=True),
    sa.Column('user_created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email'),
    sa.UniqueConstraint('user_name')
    )
    op.create_table('brands',
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('brand_name', sa.String(), nullable=True),
    sa.Column('brand_noname', sa.Boolean(), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('brand_created', sa.DateTime(), nullable=True),
    sa.Column('brand_modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['supermarket_chains.chain_id'], ),
    sa.PrimaryKeyConstraint('brand_id')
    )
    op.create_table('household_members',
    sa.Column('household_member_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('household_member_type', sa.String(), nullable=True),
    sa.Column('household_member_sex', sa.String(length=1), nullable=True),
    sa.Column('household_member_age', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('household_member_id')
    )
    op.create_table('pets',
    sa.Column('pet_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('pet_type', sa.String(), nullable=True),
    sa.Column('pet_age', sa.Integer(), nullable=True),
    sa.Column('pet_status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('pet_id')
    )
    op.create_table('supermarket_branches',
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('branch_chaininternal_id', sa.Integer(), nullable=True),
    sa.Column('branch_name', sa.String(), nullable=True),
    sa.Column('branch_street', sa.String(), nullable=True),
    sa.Column('branch_plz', sa.String(), nullable=True),
    sa.Column('branch_ort', sa.String(), nullable=True),
    sa.Column('branch_more', sa.Text(), nullable=True),
    sa.Column('branch_specific', sa.Text(), nullable=True),
    sa.Column('branch_created', sa.DateTime(), nullable=True),
    sa.Column('branch_tel', sa.String(), nullable=True),
    sa.Column('branch_uid_number', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['chain_id'], ['supermarket_chains.chain_id'], ),
    sa.PrimaryKeyConstraint('branch_id')
    )
    op.create_table('user_analysis',
    sa.Column('analysis_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('analysis_type', sa.String(length=255), nullable=True),
    sa.Column('insights', sa.Text(), nullable=True),
    sa.Column('analysis_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('analysis_id')
    )
    op.create_table('users_attributes',
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_attribute_status', sa.Integer(), nullable=True),
    sa.Column('user_attribute_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.attribute_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('attribute_id', 'user_id')
    )
    op.create_table('brands_attributes',
    sa.Column('brand_id', sa.Integer(), nullable=False),
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.Column('brand_attribute_score', sa.Float(), nullable=True),
    sa.Column('brand_attribute_created', sa.DateTime(), nullable=True),
    sa.Column('brand_attribute_modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.attribute_id'], ),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.brand_id'], ),
    sa.PrimaryKeyConstraint('brand_id', 'attribute_id')
    )
    op.create_table('purchases',
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('purchase_sum', sa.Float(), nullable=True),
    sa.Column('purchase_time', sa.DateTime(), nullable=True),
    sa.Column('paymentmethod_id', sa.Integer(), nullable=True),
    sa.Column('purchase_used_discount_type', sa.String(), nullable=True),
    sa.Column('receipt_nr', sa.String(), nullable=True),
    sa.Column('document_nr', sa.String(), nullable=True),
    sa.Column('trace_nr', sa.String(), nullable=True),
    sa.Column('purchase_processed', sa.DateTime(), nullable=True),
    sa.Column('purchase_created', sa.DateTime(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('cashier_number', sa.String(), nullable=True),
    sa.Column('register_number', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['supermarket_branches.branch_id'], ),
    sa.ForeignKeyConstraint(['paymentmethod_id'], ['payment_methods.paymentmethod_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('purchase_id')
    )
    op.create_table('purchased_products',
    sa.Column('purchased_product_id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=True),
    sa.Column('purchased_product_price', sa.Float(), nullable=True),
    sa.Column('purchased_product_qty', sa.Integer(), nullable=True),
    sa.Column('purchased_procuct_includeddiscount', sa.Float(), nullable=True),
    sa.Column('purchased_procuct_processed', sa.DateTime(), nullable=True),
    sa.Column('purchased_product_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.purchase_id'], ),
    sa.PrimaryKeyConstraint('purchased_product_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('purchased_products')
    op.drop_table('purchases')
    op.drop_table('brands_attributes')
    op.drop_table('users_attributes')
    op.drop_table('user_analysis')
    op.drop_table('supermarket_branches')
    op.drop_table('pets')
    op.drop_table('household_members')
    op.drop_table('brands')
    op.drop_table('users')
    op.drop_table('supermarket_chains')
    op.drop_table('payment_methods')
    op.drop_table('attributes')
    # ### end Alembic commands ###
